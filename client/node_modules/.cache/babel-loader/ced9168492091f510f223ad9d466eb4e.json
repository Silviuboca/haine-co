{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = collectionsMap => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/silviu/Desktop/JavaScript/Projects/React/haine-co/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADkC,CAArB,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAIH,cAAD,KAAqB;AACzDC,EAAAA,IAAI,EAAEL,eAAe,CAACQ,yBADmC;AAEzDC,EAAAA,OAAO,EAAEL;AAFgD,CAArB,CAA/B;AAKP,OAAO,MAAMM,sBAAsB,GAAIC,YAAD,KAAmB;AACvDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBADiC;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAAnB,CAA/B;AAKP,OAAO,MAAME,0BAA0B,GAAIT,cAAD,IAAoB;AAC5D,SAAQU,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMf,cAAc,GAAGF,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,sBAAsB,CAACH,cAAD,CAAvB,CAAR;AACD,KALH,EAMGgB,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = (collectionsMap) => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionSuccess(collectionsMap));\n      })\n      .catch((error) => dispatch(fetchCollectionFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}